version: '3'

volumes:
  staging_postgres_data: {}
  staging_postgres_backup: {}
  staging_caddy: {}
  staging_media: {}
  staging_static: {}

services:
  django:{% if cookiecutter.use_celery == 'y' %} &django{% endif %}
    build:
      context: .
      dockerfile: ./compose/staging/django/Dockerfile
    image: {{ cookiecutter.project_slug }}_staging_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.staging/.django
      - ./.envs/.staging/.postgres
    command: /start
    volumes:
      - staging_media:/data/media
      - staging_static:/data/static

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: {{ cookiecutter.project_slug }}_staging_postgres
    volumes:
      - staging_postgres_data:/var/lib/postgresql/data
      - staging_postgres_backup:/backups
    env_file:
      - ./.envs/.staging/.postgres

  nginx:
    build:
      context: .
      dockerfile: ./compose/staging/nginx/Dockerfile
    depends_on:
      - django
    env_file:
      - ./.envs/.staging/.nginx
    networks:
      - nginxproxy_net1
      - default
    ports:
      - "0.0.0.0:8014:80"
    volumes:
      - staging_media:/data/media
      - staging_static:/data/static

  redis:
    image: redis:3.2

  {%- if cookiecutter.use_celery == 'y' %}

  celeryworker:
    <<: *django
    image: {{ cookiecutter.project_slug }}_staging_celeryworker
    depends_on:
     - postgres
     - redis
    command: /start-celeryworker
    restart: always

  celerybeat:
    <<: *django
    image: {{ cookiecutter.project_slug }}_staging_celerybeat
    depends_on:
      - postgres
      - redis
    command: /start-celerybeat

  flower:
    <<: *django
    image: {{ cookiecutter.project_slug }}_staging_flower
    ports:
      - "5555:5555"
    command: /start-flower

  {%- endif %}

networks:
  nginxproxy_net1:
    external:
      name: nginxproxy_net1
